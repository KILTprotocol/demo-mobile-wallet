//
//  EtherCryptoMgrProtocol.swift
//  EthernomPasswordManagerMobile
//
//  Created by Fred Covely on 1/14/20.
//  Copyright Â© 2020 Facebook. All rights reserved.
//

// this calss defines the basic interface that any crypto interface to the card can support
// the idea here is that you can change a lot of the core crypt components and not change a lot
// of the framework or certainly app code
import Foundation

protocol EtherCryptoMgrProtocol {
  func initCryptoLib(libname: String)

  // access
  func GetPublicKey () -> Data?
  func GetPublicKeyForCard() -> [UInt8]
  func GetPrivateKey () -> Data?
  func GetCardPublicKey() -> Data?
  func getKeyAsData (key : SecKey?)-> Data?

  // key exchange
  func GeneratePublicKeyFromPrivate(privateKey : Data)
  func SetCardPublicKey(cardPublicKeyBytes : [UInt8])

  // AEAD
  func InitializeRandomSequence()
  // return a buffer with nonce data specific to the impl
  func GetNextSequence()->UInt32

  // finally encrypt/decrypt packets
  func EncryptData(encPayload: Data)->Data?
  func DecryptData(encHeader: Data, encAppData: Data) -> Data?
}
